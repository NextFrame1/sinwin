from datetime import datetime

from aiogram import F, Router
from aiogram.enums import ParseMode
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from aiogram.types import CallbackQuery, Message

from app.api import APIRequest
from app.loader import config
import app.keyboards.menu_inline as inline
from app.database.test import users
from app.utils.algorithms import is_valid_card

only_confirmed = lambda call: users.get(call.from_user.id, {}).get('final', False) is True or call.from_user.id in config.secrets.ADMINS_IDS  # noqa: E731
message_only_confirmed = lambda message: users.get(message.from_user.id, {}).get('final', False) is True or message.from_user.id in config.secrets.ADMINS_IDS  # noqa: E731

default_router = Router()
alerts = True


class CardWithdrawGroup(StatesGroup):
	withdraw_sum = State()
	card_number = State()
	approved = State()


class SteamWidthDrawGroup(StatesGroup):
	withdraw_sum = State()
	steam_login = State()


class PromoGroup(StatesGroup):
	promocode = State()


@default_router.callback_query(F.data == "statistics", only_confirmed)
async def statistics_callback(call: CallbackQuery):
	messages = [
		"<b>–°–¢–ê–¢–ò–°–¢–ò–ö–ê –ü–û –í–°–ï–ú –ë–û–¢–ê–ú</b>",
		"<code>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –∫–æ—Ç–æ—Ä—ã–µ –∑–∞–ø—É—Å—Ç–∏–ª–∏ –±–æ—Ç–∞ –ø–æ –≤–∞—à–∏–º —Å—Å—ã–ª–∫–∞–º</code>\n",
		"üí∞Ô∏è –ë–∞–ª–∞–Ω—Å: 0 RUB\n",
		"–í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: n\n–î–µ–ø–æ–∑–∏—Ç—ã –∑–∞ –≤—Å–µ –≤—Ä–µ–º—è: n\n–î–æ—Ö–æ–¥ –∑–∞ –≤—Å–µ –≤—Ä–µ–º—è: n\n–ü–µ—Ä–≤—ã–µ –¥–µ–ø–æ–∑–∏—Ç—ã –∑–∞ –≤—Å–µ –≤—Ä–µ–º—è: n",
		"–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ —Å–∏–≥–Ω–∞–ª–æ–≤: n\n",
		"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –Ω–∞ —ç—Ç–∞–ø–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: n\n–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –Ω–∞ —ç—Ç–∞–ø–µ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è",
		"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –Ω–∞ —ç—Ç–∞–ø–µ –∏–≥—Ä—ã: n\n",
		"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∑–∞ —Å–µ–≥–æ–¥–Ω—è: n\n‚îú –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∑–∞ –≤—á–µ—Ä–∞: n\n‚îú –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∑–∞ –Ω–µ–¥–µ–ª—é: n",
		"‚îî –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∑–∞ –º–µ—Å—è—Ü: n\n",
		"–°—É–º–º–∞ –¥–µ–ø–æ–∑–∏—Ç–æ–≤ –∑–∞ —Å–µ–≥–æ–¥–Ω—è: n\n‚îú –°—É–º–º–∞ –¥–µ–ø–æ–∑–∏—Ç–æ–≤ –∑–∞ –≤—á–µ—Ä–∞: n\n‚îú –°—É–º–º–∞ –¥–µ–ø–æ–∑–∏—Ç–æ–≤ –∑–∞ –Ω–µ–¥–µ–ª—é: n",
		"‚îî –°—É–º–º–∞ –¥–µ–ø–æ–∑–∏—Ç–æ–≤ –∑–∞ –º–µ—Å—è—Ü: n\n",
		"–ü–µ—Ä–≤—ã–µ –¥–µ–ø–æ–∑–∏—Ç—ã –∑–∞ —Å–µ–≥–æ–¥–Ω—è: n\n‚îú –ü–µ—Ä–≤—ã–µ –¥–µ–ø–æ–∑–∏—Ç—ã –∑–∞ –≤—á–µ—Ä–∞: n\n‚îú –ü–µ—Ä–≤—ã–µ –¥–µ–ø–æ–∑–∏—Ç—ã –∑–∞ –Ω–µ–¥–µ–ª—é: n",
		"‚îî –ü–µ—Ä–≤—ã–µ –¥–µ–ø–æ–∑–∏—Ç—ã –∑–∞ –º–µ—Å—è—Ü: n\n",
		"–î–æ—Ö–æ–¥ –∑–∞ —Å–µ–≥–æ–¥–Ω—è: n\n‚îú –î–æ—Ö–æ–¥ –∑–∞ –≤—á–µ—Ä–∞: n\n‚îú –î–æ—Ö–æ–¥ –∑–∞ –Ω–µ–¥–µ–ª—é: n",
		"‚îî –î–æ—Ö–æ–¥ –∑–∞ –º–µ—Å—è—Ü: n\n",
	]

	await call.message.edit_text(
		"\n".join(messages),
		parse_mode=ParseMode.HTML,
		reply_markup=inline.create_statistics_bot_menu(),
	)


@default_router.callback_query(F.data == "statistics_mines", only_confirmed)
async def statistics_mines_callback(call: CallbackQuery):
	messages = [
		"<b>üí£Ô∏è–°–¢–ê–¢–ò–°–¢–ò–ö–ê –ü–û MINES</b>",
		"<b>–ó–ê –í–°–ï –í–†–ï–ú–Ø</b>\n",
		"‚îå –ë–∞–ª–∞–Ω—Å –ø–∞—Ä—Ç–Ω–µ—Ä–∫–∏: n",
		"‚îú –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –ø–∞—Ä—Ç–Ω–µ—Ä–∫–µ –≤—Å–µ–≥–æ: n",
		"‚îú –ë–∞–ª–∞–Ω—Å –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: n",
		"‚îú –í—ã–≤–µ–ª–∏ —Å –ø–∞—Ä—Ç–Ω–µ—Ä–∫–∏: n",
		f"‚îî –ü–æ—Å—Ç–∞–≤–ª–µ–Ω–æ –Ω–∞ –≤—ã–≤–æ–¥ {datetime.now()}: n\n",
		"‚îå –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ –≤—Å–µ—Ö –±–æ—Ç–∞—Ö: n\n‚îú –î–µ–ø–æ–∑–∏—Ç—ã: n\n‚îú –î–æ—Ö–æ–¥ –±–æ—Ç–æ–≤: n\n‚îú –ü–µ—Ä–≤—ã–µ –¥–µ–ø–æ–∑–∏—Ç—ã: n",
		"‚îî  –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ —Å–∏–≥–Ω–∞–ª–æ–≤: n\n",
		"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –Ω–∞ —ç—Ç–∞–ø–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: n\n‚îú –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –Ω–∞ —ç—Ç–∞–ø–µ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è",
		"‚îî –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –Ω–∞ —ç—Ç–∞–ø–µ –∏–≥—Ä—ã: n\n",
		"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∑–∞ —Å–µ–≥–æ–¥–Ω—è: n\n‚îú –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∑–∞ –≤—á–µ—Ä–∞: n\n‚îú –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∑–∞ –Ω–µ–¥–µ–ª—é: n",
		"‚îî –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∑–∞ –º–µ—Å—è—Ü: n\n",
		"–°—É–º–º–∞ –¥–µ–ø–æ–∑–∏—Ç–æ–≤ –∑–∞ —Å–µ–≥–æ–¥–Ω—è: n\n‚îú –°—É–º–º–∞ –¥–µ–ø–æ–∑–∏—Ç–æ–≤ –∑–∞ –≤—á–µ—Ä–∞: n\n‚îú –°—É–º–º–∞ –¥–µ–ø–æ–∑–∏—Ç–æ–≤ –∑–∞ –Ω–µ–¥–µ–ª—é: n",
		"‚îî –°—É–º–º–∞ –¥–µ–ø–æ–∑–∏—Ç–æ–≤ –∑–∞ –º–µ—Å—è—Ü: n\n",
		"–ü–µ—Ä–≤—ã–µ –¥–µ–ø–æ–∑–∏—Ç—ã –∑–∞ —Å–µ–≥–æ–¥–Ω—è: n\n‚îú –ü–µ—Ä–≤—ã–µ –¥–µ–ø–æ–∑–∏—Ç—ã –∑–∞ –≤—á–µ—Ä–∞: n\n‚îú –ü–µ—Ä–≤—ã–µ –¥–µ–ø–æ–∑–∏—Ç—ã –∑–∞ –Ω–µ–¥–µ–ª—é: n",
		"‚îî –ü–µ—Ä–≤—ã–µ –¥–µ–ø–æ–∑–∏—Ç—ã –∑–∞ –º–µ—Å—è—Ü: n\n",
		"–î–æ—Ö–æ–¥ –∑–∞ —Å–µ–≥–æ–¥–Ω—è: n\n‚îú –î–æ—Ö–æ–¥ –∑–∞ –≤—á–µ—Ä–∞: n\n‚îú –î–æ—Ö–æ–¥ –∑–∞ –Ω–µ–¥–µ–ª—é: n",
		"‚îî –î–æ—Ö–æ–¥ –∑–∞ –º–µ—Å—è—Ü: n\n",
	]

	await call.message.edit_text(
		"\n".join(messages),
		parse_mode=ParseMode.HTML,
		reply_markup=inline.create_mines_statistics_menu(),
	)


@default_router.callback_query(F.data.startswith("referal"), only_confirmed)
async def referal_callback(call: CallbackQuery):
	messages = [
		"–ü–æ–º–æ–≥–∏—Ç–µ —Å–≤–æ–∏–º –¥—Ä—É–∑—å—è–º —Å—Ç–∞—Ç—å —á–∞—Å—Ç—å—é –Ω–∞—à–µ–π –∫–æ–º–∞–Ω–¥—ã –∏ –Ω–∞—á–Ω–∏—Ç–µ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –≤–º–µ—Å—Ç–µ!\n",
		"–ú—ã –∏—â–µ–º —Ç–æ–ª—å–∫–æ –º–æ—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª–æ–≤, –ø—Ä–µ–¥–ø–æ—á—Ç–∏—Ç–µ–ª—å–Ω–æ —Å –æ–ø—ã—Ç–æ–º –≤ –∞—Ä–±–∏—Ç—Ä–∞–∂–µ.\n\n<code>üí∞Ô∏è –£—Å–ª–æ–≤–∏—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã –º–æ–≥—É—Ç –º–µ–Ω—è—Ç—å—Å—è</code>\n",
		"<b>–î–ª—è –≤–∞—Å:</b>",
		'–í—ã –ø–æ–ª—É—á–∏—Ç–µ 15 000 —Ä—É–±–ª–µ–π –µ—Å–ª–∏ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–Ω—ã–π –≤–∞–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–π–¥–µ—Ç –¥–æ —Å—Ç–∞—Ç—É—Å–∞ "–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª".\n',
		"<b>–î–ª—è –≤–∞—à–µ–≥–æ –¥—Ä—É–≥–∞:</b>",
		'–í–∞—à –¥—Ä—É–≥ –ø–æ–ª—É—á–∏—Ç —Å—Ç–∞—Ç—É—Å "–°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç 40%" –≤–º–µ—Å—Ç–æ "–ù–æ–≤–∏—á–æ–∫ 35%" –Ω–∞ –ø—Ä–æ—Ç—è–∂–µ–Ω–∏–∏ –ø–µ—Ä–≤–æ–≥–æ –º–µ—Å—è—Ü–∞ —Ä–∞–±–æ—Ç—ã.\n',
		"–í–∞—à–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞: <code>https://t.me/SinWinBot?start={hash}</code>",
	]

	await call.message.edit_text(
		"\n".join(messages),
		parse_mode=ParseMode.HTML,
		reply_markup=inline.create_referals_markup(),
	)


@default_router.callback_query(F.data.startswith("about_us"), only_confirmed)
async def about_uscallback(call: CallbackQuery):
	messages = [
		'–°–ª–µ–¥–∏—Ç–µ –∑–∞ –Ω–∞—à–∏–º–∏ –Ω–æ–≤–æ—Å—Ç—è–º–∏ –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è–º–∏ –Ω–∞ <a href="https://t.me/+W8_28FXJWXIxZTgy">–∫–∞–Ω–∞–ª–µ SinWin</a>. –¢–∞–º –≤—ã –Ω–∞–π–¥–µ—Ç–µ —Å–≤–µ–∂–∏–µ –Ω–æ–≤–æ—Å—Ç–∏ –∏ –≤–∞–∂–Ω—ã–µ –æ–±—ä—è–≤–ª–µ–Ω–∏—è –¥–ª—è –Ω–∞—à–µ–π –∫–æ–º–∞–Ω–¥—ã.\n',
		"–í–∞—à–µ –º–Ω–µ–Ω–∏–µ –≤–∞–∂–Ω–æ –¥–ª—è –Ω–∞—Å! –ú—ã –≤—Å–µ–≥–¥–∞ —Å—Ç—Ä–µ–º–∏–º—Å—è –∫ —Å–æ–≤–µ—Ä—à–µ–Ω—Å—Ç–≤—É, –ø–æ—ç—Ç–æ–º—É –±—É–¥–µ–º —Ä–∞–¥—ã –≤–∞—à–∏ –≤–æ–ø—Ä–æ—Å–∞–º, –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è–º –∏ –æ—Ç–∑—ã–≤–∞–º.\n",
		"–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –≤—ã–±—Ä–∞–ª–∏ SinWin!",
	]

	await call.message.edit_text(
		"\n".join(messages),
		parse_mode=ParseMode.HTML,
		reply_markup=inline.create_about_us_markup(),
	)


@default_router.callback_query(F.data.startswith("my_referals"), only_confirmed)
async def referal_answer_callback(call: CallbackQuery):
	await call.answer("–£ –≤–∞—Å –Ω–µ—Ç —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤", show_alert=True)


@default_router.callback_query(F.data.startswith("reload_achievs"), only_confirmed)
async def reload_achievs_callback(call: CallbackQuery):
	await call.answer("–í—ã –Ω–µ –≤—ã–ø–æ–ª–Ω–∏–ª–∏ –Ω–µ –æ–¥–Ω–æ–≥–æ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è", show_alert=True)


@default_router.callback_query(F.data.startswith("my_achievs"), only_confirmed)
async def my_achievs_callback(call: CallbackQuery):
	messages = [
		"üèÜÔ∏è –í–∞—à–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è\n",
		"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: 4\n",
		"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ –í–∞—à–∏–º —Å—Å—ã—å–∫–∞–º: 100, 250\n",
		"‚úÖ –î–µ–ø–æ–∑–∏—Ç—ã: 10 000, 25 000, 50 000 —Ä—É–±–ª–µ–π\n",
		"‚úÖ –î–æ—Ö–æ–¥: 5 000, 10 000, 25 000 —Ä—É–±–ª–µ–π\n",
		"‚úÖ –ü–µ—Ä–≤—ã–µ –¥–µ–ø–æ–∑–∏—Ç—ã: 25, 50, 75, 100, 150\n",
		"–¢–æ–ø –í–æ—Ä–∫–µ—Ä–æ–≤:\n",
		"ü•á 1 –º–µ—Å—Ç–æ –∑–∞ –¥–µ–∫–∞–±—Ä—å 2024\n",
		"–ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –≤ —Ç–æ–º –∂–µ –¥—É—Ö–µ –∏ –¥–æ—Å—Ç–∏–≥–∞–π—Ç–µ –Ω–æ–≤—ã—Ö –≤—ã—Å–æ—Ç! üåü",
	]

	await call.message.edit_text(
		"\n".join(messages),
		parse_mode=ParseMode.HTML,
		reply_markup=inline.create_back_markup("achievements"),
	)


@default_router.callback_query(F.data.startswith("achievements"), only_confirmed)
async def achievements_callback(call: CallbackQuery):
	global alerts

	if call.data == "achievements_false":
		alerts = not alerts

	messages = [
		"üèÜÔ∏è –í–∞—à–∏ –¶–µ–ª–∏:\n",
		"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ –≤–∞—à–∏–º —Å—Å—ã–ª–∫–∞–º: 100\n‚ùå –î–µ–ø–æ–∑–∏—Ç—ã: 10 000 —Ä—É–±–ª–µ–π\n‚ùå –î–æ—Ö–æ–¥: 5 000 —Ä—É–±–ª–µ–π",
		"‚ùå –ü–µ—Ä–≤—ã–µ –¥–µ–ø–æ–∑–∏—Ç—ã: 25",
		"‚ùå –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤: 1",
		"‚ùå –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ —Å–∏–≥–Ω–∞–ª–æ–≤: 250\n",
	]

	messages.append(
		"‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤–∫–ª—é—á–µ–Ω—ã\n" if alerts else "‚ùå –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤—ã–∫–ª—é—á–µ–Ω—ã\n"
	)

	messages.append("–ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –≤ —Ç–æ–º –∂–µ –¥—É—Ö–µ –∏ –¥–æ—Å—Ç–∏–≥–∞–π—Ç–µ –Ω–æ–≤—ã—Ö –≤—ã—Å–æ—Ç! üåü")

	await call.message.edit_text(
		"\n".join(messages),
		parse_mode=ParseMode.HTML,
		reply_markup=inline.create_achievements_markup(alerts),
	)


@default_router.callback_query(F.data == "record_creo", only_confirmed)
async def record_creo_callback(call: CallbackQuery):
	messages = [
		"–í —ç—Ç–∏—Ö –±–æ—Ç–∞—Ö –≤—ã –º–æ–∂–µ—Ç–µ –ª–µ–≥–∫–æ –∑–∞–ø–∏—Å–∞—Ç—å –∫—Ä–µ–∞—Ç–∏–≤—ã:\n",
		"Mines –¥–ª—è –≤—ã–±–æ—Ä–∞ –º–∏–Ω: @iZiMinsBot",
		"Mines –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –º–∏–Ω: @iZiMin_Bot",
		"Speed Cash: @SPDCashsBot",
		"LuckyJet: @CashJetsBot",
		"Coin Flip: @WinFlipsBot\n",
		"–î–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å —ç—Ç–∏–º–∏ –±–æ—Ç–∞–º–∏, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–∑–Ω–∞–∫–æ–º—å—Ç–µ—Å—å —Å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–µ–π. –í –Ω–µ–π –≤—ã –Ω–∞–π–¥–µ—Ç–µ –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —à–∞–≥–∏ –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –∑–∞–ø–∏—Å–∏ –∫—Ä–µ–∞—Ç–∏–≤–æ–≤.",
	]
	await call.message.edit_text(
		"\n".join(messages),
		parse_mode=ParseMode.HTML,
		reply_markup=inline.create_record_creo_markup(),
	)


@default_router.callback_query(F.data == "work", only_confirmed)
async def work_callback(call: CallbackQuery):
	try:
		partners = await APIRequest.post("/partner/find", {"opts": {"tg_id": call.from_user.id}})
		partner = partners[0]['partners'][-1]
	except Exception:
		messages = [
			"üíªÔ∏è WORK\n\n<b>–°–°–´–õ–ö–ò –ù–ê –ë–û–¢–û–í</b>\nMines - <code>https://t.me/IziMin_test_Bot</code>",
			"Lucky Jet - <code>https://t.me/CashJetBot</code>",
			"Speed Cash - <code>https://t.me/SPDCashBot</code>",
			"Coin Flip - <code>https://t.me/CoinFlipBot</code>",
		]
		await call.message.edit_text(
			"\n".join(messages),
			parse_mode=ParseMode.HTML,
			reply_markup=inline.create_work_markup(),
		)
		return

	partner_hash = partner.get("partner_hash", "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ")
	messages = [
		f"üíªÔ∏è WORK\n\n<b>–°–°–´–õ–ö–ò –ù–ê –ë–û–¢–û–í</b>\nMines - <code>https://t.me/IziMin_test_Bot?start={partner_hash}</code>",
		f"Lucky Jet - <code>https://t.me/CashJetBot?start={partner_hash}</code>",
		f"Speed Cash - <code>https://t.me/SPDCashBot?start={partner_hash}</code>",
		f"Coin Flip - <code>https://t.me/CoinFlipBot?start={partner_hash}</code>",
	]
	await call.message.edit_text(
		"\n".join(messages),
		parse_mode=ParseMode.HTML,
		reply_markup=inline.create_work_markup(),
	)


@default_router.callback_query(F.data.startswith("showmenu"), only_confirmed)
async def showmenu_callback(call: CallbackQuery):
	if call.data == "showmenu_after_reg":
		await call.message.delete()
		await call.message.answer(
			"üè†Ô∏è <b>–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º!</b>\n\n–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –≤—ã–±—Ä–∞–ª–∏ SinWin!",
			parse_mode=ParseMode.HTML,
			reply_markup=inline.create_main_menu_markup(),
		)
	else:
		await call.message.edit_text(
			"üè†Ô∏è <b>–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º!</b>\n\n–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –≤—ã–±—Ä–∞–ª–∏ SinWin!",
			parse_mode=ParseMode.HTML,
			reply_markup=inline.create_main_menu_markup(),
		)


@default_router.callback_query(F.data.startswith("admin_"), only_confirmed)
async def adminpanel_query_callback(call: CallbackQuery):
	await call.message.edit_text(
		"–ó–ê–ì–õ–£–®–ö–ê", reply_markup=inline.create_back_markup("showmenu")
	)


@default_router.callback_query(F.data == "adminpanel")
async def adminpanel_callback(call: CallbackQuery):
	# ‚îî‚îè ‚îú„Äå‚îå
	messages = [
		"‚îå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –ø–∞—Ä—Ç–Ω–µ—Ä–∫–µ: 10",
		"‚îú –ë–∞–ª–∞–Ω—Å –ü–∞—Ä—Ç–Ω–µ—Ä–∫–∏: 100 000 —Ä—É–±–ª–µ–π",
		"‚îú –î–æ—Ö–æ–¥ –±–æ—Ç–∞: 10 000 000 —Ä—É–±–ª–µ–π",
		"‚îú –ë–∞–ª–∞–Ω—Å –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: 15 000 500 —Ä—É–±–ª–µ–π",
		f'‚îî –ü–æ—Å—Ç–∞–≤–ª–µ–Ω–æ –Ω–∞ –≤—ã–≤–æ–¥ {datetime.now().strftime("%Y-%m-%d %H:%M:%S")}: 100 000 —Ä—É–±–ª–µ–π',
	]

	await call.message.edit_text(
		"\n".join(messages),
		parse_mode=ParseMode.HTML,
		reply_markup=inline.create_adminpanel_markup(),
	)


@default_router.callback_query(F.data == "top_workers", only_confirmed)
async def top_workers_callback(call: CallbackQuery):
	# ü•áü•àü•âüèÖ
	messages = [
		"üèÜÔ∏è –¢–æ–ø –≤–æ—Ä–∫–µ—Ä–æ–≤ –ø–æ –¥–æ—Ö–æ–¥—É –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π –º–µ—Å—è—Ü\n",
		"<code>ü•á WOT****3156: 1 000 000 —Ä—É–±–ª–µ–π</code>",
		"ü•à RNP****6871: 800 000 —Ä—É–±–ª–µ–π",
		"ü•â RNP****8165: 700 000 —Ä—É–±–ª–µ–π",
		"üèÖ WOK****2899: 600 000 —Ä—É–±–ª–µ–π",
		"üèÖ WOI****9437: 450 000 —Ä—É–±–ª–µ–π\n",
		"üëΩÔ∏è –í–∞—à–∞ –ø–æ–∑–∏—Ü–∏—è –≤ —Ç–æ–ø–µ: 10\n",
		"üìÖ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ–±–Ω—É–ª—è–µ—Ç—Å—è 1 —á–∏—Å–ª–∞ –∫–∞–∂–¥–æ–≥–æ –º–µ—Å—è—Ü–∞.\n",
		'<code>üëë –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, –∑–∞–Ω—è–≤—à–∏–π –ø–µ—Ä–≤–æ–µ –º–µ—Å—Ç–æ, –ø–æ–≤—ã—à–∞–µ—Ç—Å—è –≤ —Å—Ç–∞—Ç—É—Å–µ, –µ—Å–ª–∏ –µ–≥–æ —Ç–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å "–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª" –∏–ª–∏ –Ω–∏–∂–µ.</code>',
		"<code>üíµ –í—Ç–æ—Ä–æ–µ –∏ —Ç—Ä–µ—Ç—å–µ –º–µ—Å—Ç–∞ –ø–æ–ª—É—á–∞—é—Ç –ø—Ä–µ–º–∏—é.</code>\n\n"
		"üöÄ –£–¥–∞—á–∏ –≤ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–∏ –Ω–æ–≤—ã—Ö –≤—ã—Å–æ—Ç!",
	]

	await call.message.edit_text(
		"\n".join(messages),
		parse_mode=ParseMode.HTML,
		reply_markup=inline.create_back_markup("showmenu"),
	)


@default_router.callback_query(F.data == "withdraws_history", only_confirmed)
async def withdraws_history_callback(call: CallbackQuery):
	# üü¢üü°‚ö™Ô∏è
	messages = [
		"ü§ñ –ò—Å—Ç–æ—Ä–∏—è –≤—ã–≤–æ–¥–æ–≤: 3",
		"üü¢ - –í—ã–≤–æ–¥ –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω",
		"‚îú 18:07 27.12.2024: 10 000: üí≥Ô∏è –ö–∞—Ä—Ç–∞",
		"üü¢ - –í—ã–≤–æ–¥ –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω",
		"‚îú 15:07 21.12.2024: 2 000: ‚öôÔ∏è Steam",
		"üü¢ - –í—ã–≤–æ–¥ –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω",
		"‚îî 16:27 04.11.2024: 5 000: üì± –í—ã–≤–æ–¥ –ø–æ –Ω–æ–º–µ—Ä—É\n",
	]

	await call.message.edit_text(
		"\n".join(messages),
		parse_mode=ParseMode.HTML,
		reply_markup=inline.create_back_markup("profile"),
	)


@default_router.callback_query(F.data == "status_levels", only_confirmed)
async def status_levels_callback(call: CallbackQuery):
	# ‚ùå‚úÖüèÜÔ∏èüìäüéØüíºüí∞Ô∏è
	messages = [
		"1. –ù–æ–≤–∏—á–æ–∫: 35 %\n–£—Å–ª–æ–≤–∏—è –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞:",
		"‚ùå –î–æ—Ö–æ–¥ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π –º–µ—Å—è—Ü: –Ω–µ –º–µ–Ω–µ–µ 50 000 —Ä—É–±–ª–µ–π",
		"‚úÖ –û–±—â–∏–π –¥–æ—Ö–æ–¥ –∑–∞ –≤—Å–µ –≤—Ä–µ–º—è: –Ω–µ –º–µ–Ω–µ–µ 100 000 —Ä—É–±–ª–µ–π",
		"‚úÖ –ü–µ—Ä–≤—ã–µ –¥–µ–ø–æ–∑–∏—Ç—ã –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π –º–µ—Å—è—Ü: –Ω–µ –º–µ–Ω–µ–µ 100\n",
		"2. –°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç 40 %",
		"‚ùå –î–æ—Ö–æ–¥ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π –º–µ—Å—è—Ü: –Ω–µ –º–µ–Ω–µ–µ 150 000 —Ä—É–±–ª–µ–π",
		"‚úÖ –û–±—â–∏–π –¥–æ—Ö–æ–¥ –∑–∞ –≤—Å–µ –≤—Ä–µ–º—è: –Ω–µ –º–µ–Ω–µ–µ 300 000 —Ä—É–±–ª–µ–π",
		"‚úÖ –ü–µ—Ä–≤—ã–µ –¥–µ–ø–æ–∑–∏—Ç—ã –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π –º–µ—Å—è—Ü: –Ω–µ –º–µ–Ω–µ–µ 200\n",
		"3. –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª 45 %",
		"‚ùå –î–æ—Ö–æ–¥ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π –º–µ—Å—è—Ü: –Ω–µ –º–µ–Ω–µ–µ 300 000 —Ä—É–±–ª–µ–π",
		"‚úÖ –û–±—â–∏–π –¥–æ—Ö–æ–¥ –∑–∞ –≤—Å–µ –≤—Ä–µ–º—è: –Ω–µ –º–µ–Ω–µ–µ 600 000 —Ä—É–±–ª–µ–π",
		"‚úÖ –ü–µ—Ä–≤—ã–µ –¥–µ–ø–æ–∑–∏—Ç—ã –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π –º–µ—Å—è—Ü: –Ω–µ –º–µ–Ω–µ–µ 400\n",
		"4. –ú–∞—Å—Ç–µ—Ä 50%",
		"‚ùå –î–æ—Ö–æ–¥ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π –º–µ—Å—è—Ü: –Ω–µ –º–µ–Ω–µ–µ 500 000 —Ä—É–±–ª–µ–π",
		"‚úÖ –û–±—â–∏–π –¥–æ—Ö–æ–¥ –∑–∞ –≤—Å–µ –≤—Ä–µ–º—è: –Ω–µ –º–µ–Ω–µ–µ 1 000 000 —Ä—É–±–ª–µ–π",
		"‚úÖ –ü–µ—Ä–≤—ã–µ –¥–µ–ø–æ–∑–∏—Ç—ã –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π –º–µ—Å—è—Ü: –Ω–µ –º–µ–Ω–µ–µ 600\n",
		"5. –õ–µ–≥–µ–Ω–¥–∞ –°—É–± –ü–∞—Ä—Ç–Ω–µ—Ä—Å—Ç–≤–æ\n",
		'–°—É–± –ø–∞—Ä—Ç–Ω–µ—Ä—Å—Ç–≤–æ –ø–æ–¥–∫–ª—é—á–∞–µ—Ç—Å—è –≤—Ä—É—á–Ω—É—é. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç—Å—è –≤ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–π –ø–∞—Ä—Ç–Ω–µ—Ä—Å–∫–æ–π –ø—Ä–æ–≥—Ä–∞–º–º–µ 1 Win —á–µ—Ä–µ–∑ –Ω–∞—à—É —Å—Å—ã–ª–∫—É. –°–æ–∑–¥–∞–µ—Ç —Å–≤–æ—é —É–Ω–∏–∫–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É –¥–ª—è –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä—É—é –º—ã –∏–Ω—Ç–µ–≥—Ä–∏—Ä—É–µ–º –≤ –Ω–∞—à–µ–≥–æ –±–æ—Ç–∞. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–ª—É—á–∞–µ—Ç –æ—Ç 50% –¥–æ 60% –ø—Ä–∏–±—ã–ª–∏ —á–µ—Ä–µ–∑ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—É—é –ø–∞—Ä—Ç–Ω–µ—Ä—Å–∫—É—é –ø—Ä–æ–≥—Ä–∞–º–º—É. –ò–Ω–æ–≥–¥–∞ —Å—Ç–∞—Ç—É—Å "–õ–µ–≥–µ–Ω–¥–∞" –ø–æ–¥–∫–ª—é—á–∞–µ—Ç—Å—è –≤–º–µ—Å—Ç–æ —Å—Ç–∞—Ç—É—Å–∞ "–ú–∞—Å—Ç–µ—Ä".\n',
		"<code>–£—Å–ª–æ–≤–∏—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –º–æ–≥—É—Ç –∏–∑–º–µ–Ω—è—Ç—å—Å—è</code>",
	]

	await call.message.edit_text(
		"\n".join(messages),
		parse_mode=ParseMode.HTML,
		reply_markup=inline.create_back_markup("status"),
	)


@default_router.callback_query(F.data == "statistics_online", only_confirmed)
async def statistics_online_callback(call: CallbackQuery):
	# ‚ú®üìäüí∞Ô∏èüéÆÔ∏è
	messages = [
		"‚ú® –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏\n",
		"–°–ª–µ–¥–∏—Ç–µ –∑–∞ –≤—Å–µ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å—é –º–Ω–≥–æ–≤–µ–Ω–Ω–æ! –ù–∞–∂–º–∏—Ç–µ, —á—Ç–æ–±—ã –ø–µ—Ä–µ–π—Ç–∏ –≤ –±–æ—Ç–∞ @testusername, –∏ –ø–æ–ª—É—á–∞–π—Ç–µ:",
		"üìä –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.",
		"üí∞Ô∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –¥–µ–ø–æ–∑–∏—Ç–∞—Ö.",
		"üéÆÔ∏è –î–∞–Ω–Ω—ã–µ –ø–æ –∫–∞–∂–¥–æ–π –∏–≥—Ä–µ –≤–∞—à–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π",
		"\n–û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ: —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞, –Ω–∞–∫–æ–ø–ª–µ–Ω–Ω–∞—è —Ä–∞–Ω–µ–µ, –≤ –±–æ—Ç–µ –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è. –í—ã —Å–º–æ–∂–µ—Ç–µ –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ —Ç–æ–ª—å–∫–æ —Å –º–æ–º–µ–Ω—Ç–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è.",
	]

	await call.message.edit_text(
		"\n".join(messages),
		parse_mode=ParseMode.HTML,
		reply_markup=inline.create_online_statistics_markup(),
	)


@default_router.callback_query(F.data == "status", only_confirmed)
async def status_callback(call: CallbackQuery):
	# ‚ùå‚úÖüèÜÔ∏èüìäüéØüíºüí∞Ô∏è
	messages = [
		"üèÜÔ∏è –í–∞—à —Ç–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å: –ù–æ–≤–∏—á–æ–∫",
		"üéØ –í—ã –ø–æ–ª—É—á–∞–µ—Ç–µ: 35%\n",
		"üìä –í–∞—à –¥–æ—Ö–æ–¥ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π –º–µ—Å—è—Ü: 15 000 RUB",
		"üíº –û–±—â–∏–π –¥–æ—Ö–æ–¥: 100 000 RUB",
		"üí∞Ô∏è –ü–µ—Ä–≤—ã–µ –¥–µ–ø–æ–∑–∏—Ç—ã –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π –º–µ—Å—è—Ü: 100\n",
		"–£—Å–ª–æ–≤–∏—è –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞:",
		"‚ùå –î–æ—Ö–æ–¥ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π –º–µ—Å—è—Ü: –Ω–µ –º–µ–Ω–µ–µ 50 000 —Ä—É–±–ª–µ–π",
		"‚úÖ –û–±—â–∏–π –¥–æ—Ö–æ–¥ –∑–∞ –≤—Å–µ –≤—Ä–µ–º—è: –Ω–µ –º–µ–Ω–µ–µ 100 000 —Ä—É–±–ª–µ–π",
		"‚úÖ –ü–µ—Ä–≤—ã–µ –¥–µ–ø–æ–∑–∏—Ç—ã –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π –º–µ—Å—è—Ü: –Ω–µ –º–µ–Ω–µ–µ 100\n",
		"–ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –≤ —Ç–æ–º –∂–µ –¥—É—Ö–µ! –ß–µ–º –¥–æ–ª—å—à–µ –∏ –ª—É—á—à–µ –≤—ã —Ä–∞–±–æ—Ç–∞–µ—Ç–µ, —Ç–µ–º –±–æ–ª—å—à–µ –≤—ã –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞–π—Ç–µ! –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ –Ω–æ–≤—ã–π —É—Ä–æ–≤–µ–Ω—å –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∫–∞–∂–¥—ã–µ 24 —á–∞—Å–∞, –µ—Å–ª–∏ –≤—Å–µ —É—Å–ª–æ–≤–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω—ã.",
		"\n<code>–û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ: —É—Å–ª–æ–≤–∏—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –º–æ–≥—É—Ç –º–µ–Ω—è—Ç—å—Å—è.</code>\n",
		"–ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã, –Ω–∞–ø–∏—à–∏—Ç–µ –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É",
	]

	await call.message.edit_text(
		"\n".join(messages),
		parse_mode=ParseMode.HTML,
		reply_markup=inline.create_status_markup(),
	)


@default_router.callback_query(F.data == "profile", only_confirmed)
async def profile_callback(call: CallbackQuery):
	if call.from_user.id in config.secrets.ADMINS_IDS:
		balance, status_code = await APIRequest.get("/base/admin_balance")
		messages = [
			f"<b>–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å</b>\n\nüÜî –í–∞—à ID: {call.from_user.id}",
			"üõ°Ô∏è –í–∞—à —Ö–µ—à: admin\n",
			f"üí∞Ô∏è –ë–∞–ª–∞–Ω—Å: {balance['balance']} RUB",
			"‚öñÔ∏è –°—Ç–∞—Ç—É—Å: –ê–¥–º–∏–Ω",
			"üèóÔ∏è –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤: 0",
		]

		await call.message.edit_text(
			"\n".join(messages),
			parse_mode=ParseMode.HTML,
			reply_markup=inline.create_profile_markup(),
		)
		return

	partners = await APIRequest.post("/partner/find", {"opts": {"tg_id": call.from_user.id}})
	partner = partners[0]['partners'][-1]

	if not partner['approved']:
		users[call.from_user.id] = users.get(call.from_user.id, {})
		users[call.from_user.id]['final'] = False
		return

	partner_hash = partner.get("partner_hash", "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ")
	status = partner.get('status', '–Ω–æ–≤–∏—á–æ–∫')

	reg_date = datetime.fromisoformat(partner.get('register_date'))
	cur_date = datetime.now()
	difference = cur_date - reg_date
	days_difference = max(difference.days, 1)

	messages = [
		f"<b>–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å</b>\n\nüÜî –í–∞—à ID: {call.from_user.id}",
		f"üõ°Ô∏è –í–∞—à —Ö–µ—à: {partner_hash}\n",
		f"üí∞Ô∏è –ë–∞–ª–∞–Ω—Å: {partner.get('balance', 0.0)} RUB",
		f"‚öñÔ∏è –°—Ç–∞—Ç—É—Å: {status}",
		"üéØ –í—ã –ø–æ–ª—É—á–∞–µ—Ç–µ: 35%\n",
		"üèóÔ∏è –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤: 0",
		f"‚òØÔ∏è –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π —Å –Ω–∞–º–∏: {days_difference}",
		# f'–í–∞—à–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞ –Ω–∞ @IziMin_test_Bot: https://t.me/IziMin_test_Bot?start='
	]

	await call.message.edit_text(
		"\n".join(messages),
		parse_mode=ParseMode.HTML,
		reply_markup=inline.create_profile_markup(),
	)


@default_router.callback_query(F.data == "withdraw", only_confirmed)
async def withdraw_callback(call: CallbackQuery):
	messages = [
		"üí∞Ô∏è –ë–∞–ª–∞–Ω—Å: 0 RUB\n",
		"‚ùóÔ∏è –í–´–í–û–î –°–†–ï–î–°–¢–í –î–û–°–¢–£–ü–ï–ù –û–î–ò–ù –†–ê–ó –í –ù–ï–î–ï–õ–Æ –ö–ê–ñ–î–£–Æ –°–†–ï–î–£ –ü–û –ú–û–°–ö–û–í–°–ö–û–ú–£ –í–†–ï–ú–ï–ù–ò. –ö –í–´–í–û–î–£ –î–û–°–¢–£–ü–ù–ê –í–°–Ø –°–£–ú–ú–ê –ö–û–¢–û–†–ê–Ø –ù–ê–•–û–î–ò–¢–°–Ø –ù–ê –ë–ê–õ–ê–ù–°–ï.‚ùóÔ∏è\n",
		"–í —Ä–µ–¥–∫–∏—Ö —Å–ª—É—á–∞—è—Ö –ø—Ä–∏ –±–æ–ª—å—â–æ–º –¥–æ—Ö–æ–¥–µ —Å–æ –≤—Ç–æ—Ä–Ω–∏–∫–∞ –Ω–∞ —Å—Ä–µ–¥—É –≤—ã–≤–µ—Å—Ç–∏ –≤—Å—é —Å—É–º–º—É –ø–æ–ª—É—á–∏—Ç—Å—è —á–µ—Ä–µ–∑ –Ω–µ–¥–µ–ª—é. –û–¥–Ω–∞–∫–æ –≤ —Ç–∞–∫–∏—Ö —Å–∏—Ç—É–∞—Ü–∏—è—Ö –≤—ã –≤—Å–µ–≥–¥–∞ –º–æ–∂–µ—Ç–µ –≤—ã–≤–µ—Å—Ç–∏ —á–∞—Å—Ç—å —Å—Ä–µ–¥—Å—Ç–≤, –æ—Å—Ç–∞–≤–∏–≤ –Ω–µ–±–æ–ª—å—à–æ–π –æ—Å—Ç–∞—Ç–æ–∫ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ.\n",
		"–ï—Å–ª–∏ –≤ —Ç–µ—á–µ–Ω–∏–∏ 24 —á–∞—Å–æ–≤ –ø–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞—è–≤–∫–∏ –Ω–∞ –≤—ã–≤–æ–¥ –≤—ã –Ω–µ –ø–æ–ª—É—á–∏—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç –±–æ—Ç–∞, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π.\n",
		"<b>–õ–ò–ú–ò–¢–´ –ù–ê –í–´–í–û–î –°–†–ï–î–°–¢–í</b>\n",
		"üí≥Ô∏è <b>–ö–∞—Ä—Ç–∞</b>",
		" ‚àü VISA, MasterCard: –æ—Ç 2 000 ‚ÇΩ –¥–æ 50 000 ‚ÇΩ\n",
		"üì± <b>–í—ã–≤–æ–¥ –ø–æ –Ω–æ–º–µ—Ä—É —Ç–µ–ª–µ—Ñ–æ–Ω–∞</b>",
		" ‚àü VISA, MasterCard, –ú–ò–†: –æ—Ç 5 000 ‚ÇΩ –¥–æ 100 000 ‚ÇΩ\n",
		"‚öôÔ∏è <b>Steam</b>",
		" ‚àü –í—ã–≤–æ–¥ –Ω–∞ –∞–∫–∫–∞—É–Ω—Ç Steam: –æ—Ç 2 000 ‚ÇΩ –¥–æ 12 000 ‚ÇΩ\n",
		"üå∏ <b>Piastrix</b>",
		"‚àü –æ—Ç 1 800 ‚ÇΩ –¥–æ 100 000 ‚ÇΩ\n",
		"üëæ <b>FK Wallet</b>",
		"‚àü –æ—Ç 1 800 ‚ÇΩ –¥–æ 100 000 ‚ÇΩ\n",
		"üëë <b>–ö—Ä–∏–ø—Ç–∞</b>",
		"‚àü –ü–ª–∞–≤–∞—é—â–∏–µ –ª–∏–º–∏—Ç—ã, —Å–º–æ—Ç—Ä–∏—Ç–µ –ø—Ä–∏ –≤—ã–≤–æ–¥–µ –æ—Ç 1 500 ‚ÇΩ –¥–æ 5 000 000 ‚ÇΩ\n",
	]

	try:
		await call.message.edit_text(
			"\n".join(messages),
			parse_mode=ParseMode.HTML,
			reply_markup=inline.create_withdraw_markup(),
		)
	except Exception:
		await call.message.delete()
		await call.message.answer(
			"\n".join(messages),
			parse_mode=ParseMode.HTML,
			reply_markup=inline.create_withdraw_markup(),
		)


@default_router.callback_query(F.data == "withdraw_crypto", only_confirmed)
async def withdraw_crypto_callback(call: CallbackQuery):
	messages = [
		"–ö–∞–∫—É—é –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—É –≤—ã —Ö–æ—Ç–∏—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥–ª—è –≤—ã–≤–æ–¥–∞ –¥–µ–Ω–µ–≥?\n",
		"<b>–õ–ò–ú–ò–¢–´ –ù–ê –í–´–í–û–î –°–†–ï–î–°–¢–í</b>",
		"Bitcoin - 10 650 ‚ÇΩ - 665 000 ‚ÇΩ",
		"Ethereum - 1 000 ‚ÇΩ - 665 000 ‚ÇΩ",
		"Tron - 1 500 ‚ÇΩ - 665 070 ‚ÇΩ",
		"Tether ERC20 - 1 500 ‚ÇΩ - 5 000 000 ‚ÇΩ",
		"Tether TRC20 - 1 500 ‚ÇΩ - 5 000 000 ‚ÇΩ",
		"Tether BEP20 - 1 500 ‚ÇΩ - 5 000 000 ‚ÇΩ",
		"BNB ERC20 - 1 500 ‚ÇΩ - 655 070 ‚ÇΩ",
		"Litecoin - 1 500 ‚ÇΩ - 665 000 ‚ÇΩ",
		"Monero - 1 500 ‚ÇΩ - 665 070 ‚ÇΩ",
		"Bitcoin Cash - 1 500 ‚ÇΩ - 665 070 ‚ÇΩ",
		"Dash - 1 500 ‚ÇΩ - 665 070 ‚ÇΩ",
		"Doge - 1 500 ‚ÇΩ - 665 070 ‚ÇΩ",
		"Zcash - 1 500 ‚ÇΩ - 665 070 ‚ÇΩ",
		"Ripple - 1 500 ‚ÇΩ - 665 070 ‚ÇΩ",
		"Stellar - 1 500 ‚ÇΩ - 665 070 ‚ÇΩ",
	]

	await call.message.edit_text(
		"\n".join(messages),
		parse_mode=ParseMode.HTML,
		reply_markup=inline.create_crypto_withdraw_markup(),
	)


@default_router.callback_query(F.data == "withdraw_card", only_confirmed)
async def withdraw_card_callback(call: CallbackQuery, state: FSMContext):
	users[call.message.chat.id] = {
		"final": True,
		"withdraw_card": True,
	}
	message = "üí∞Ô∏è –ë–∞–ª–∞–Ω—Å: 0 RUB\nüí≥Ô∏è Visa –∏–ª–∏ MasterCard\n–õ–∏–º–∏—Ç –æ–¥–Ω–æ–≥–æ –≤—ã–≤–æ–¥–∞: 2 000 ‚ÇΩ - 50 000 ‚ÇΩ\n\n<code>–í—ã–≤–æ–¥ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –∫–∞—Ä—Ç—ã –±–∞–Ω–∫–æ–≤ –†–§ –º–æ–∂–µ—Ç –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç—å —Å –∑–∞–¥–µ—Ä–∂–∫–æ–π. –ß—Ç–æ–±—ã —Å–æ–≤–µ—Ä—à–∞—Ç—å –≤—ã–≤–æ–¥—ã –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –±—ã—Å—Ç—Ä–æ, —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–∞—Ä—Ç—É –°–±–µ—Ä–∞.</code>\n\n‚úçÔ∏è –í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –∫–æ—Ç–æ—Ä—É—é –í—ã —Ö–æ—Ç–∏—Ç–µ –≤—ã–≤–µ—Å—Ç–∏."

	await call.message.edit_text(
		message,
		parse_mode=ParseMode.HTML,
		reply_markup=inline.create_back_markup("withdraw"),
	)

	await state.set_state(CardWithdrawGroup.withdraw_sum)


@default_router.message(F.text, CardWithdrawGroup.withdraw_sum, message_only_confirmed)
async def withdraw_card_message(message: Message, state: FSMContext):
	user = users.get(message.chat.id, {})

	partners = await APIRequest.post("/partner/find", {"opts": {"tg_id": message.from_user.id}})
	partner = partners[0]['partners'][-1]

	await message.delete()

	try:
		sum_to_withdraw = int(message.text)
	except Exception:
		await message.answer("–û—à–∏–±–∫–∞: –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥\n\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Å—É–º–º—É –¥–ª—è –≤—ã–≤–æ–¥–∞, –∏—Å–ø–æ–ª—å–∑—É—è —Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã.", reply_markup=inline.create_back_markup("withdraw_card"))
		await state.clear()
		return

	if user.get("final", False) and user.get("withdraw_card", False):
		if partner['balance'] < 2000.0:
			await message.answer(
				"üí∞Ô∏è –ë–∞–ª–∞–Ω—Å: 0 RUB\n\n–û—à–∏–±–∫–∞: –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤. –£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –æ–ø–µ—Ä–∞—Ü–∏–∏.\n\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –≤–∞—à –±–∞–ª–∞–Ω—Å –∏ –≤–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –Ω–µ –ø—Ä–µ–≤—ã—à–∞–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã–µ —Å—Ä–µ–¥—Å—Ç–≤–∞.",
				reply_markup=inline.create_back_markup("withdraw_card"),
			)
			await state.clear()
			user["withdraw_card"] = False
		elif sum_to_withdraw > 50000.0:
			await message.answer(
					f"–û—à–∏–±–∫–∞: —Å—É–º–º–∞ –ø—Ä–µ–≤—ã—à–∞–µ—Ç –ª–∏–º–∏—Ç\n\n–°—É–º–º–∞ ({sum_to_withdraw}) –ø—Ä–µ–≤—ã—à–∞–µ—Ç –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –¥–æ–ø—É—Å—Ç–∏–º—É—é –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –º–µ—Ç–æ–¥–∞ –≤—ã–≤–æ–¥–∞.\n\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é —É–∫–∞–∑–∞–Ω–Ω—ã–º –ª–∏–º–∏—Ç–∞–º:",
				reply_markup=inline.create_back_markup("withdraw_card"),
			)
			await state.clear()
			user["withdraw_card"] = False
		elif sum_to_withdraw < 2000.0:
			await message.answer(
					f"–û—à–∏–±–∫–∞: —Å—É–º–º–∞ —Å–ª–∏—à–∫–æ–º –º–∞–ª–∞\n\n–°—É–º–º–∞ ({sum_to_withdraw}) –º–µ–Ω—å—à–µ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ –¥–æ–ø—É—Å—Ç–∏–º–æ–π –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –º–µ—Ç–æ–¥–∞ –≤—ã–≤–æ–¥–∞.\n\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é —É–∫–∞–∑–∞–Ω–Ω—ã–º –ª–∏–º–∏—Ç–∞–º.",
				reply_markup=inline.create_back_markup("withdraw_card"),
			)
			await state.clear()
			user["withdraw_card"] = False
		else:
			await state.update_data(withdraw_sum=sum_to_withdraw)
			await message.answer(f'–°—É–º–º–∞ –≤—ã–≤–æ–¥–∞: {sum_to_withdraw} ‚ÇΩ\n\n–ù–∞–ø–∏—à–∏—Ç–µ –Ω–æ–º–µ—Ä –±–∞–Ω–∫–æ–≤—Å–∫–æ–π –∫–∞—Ä—Ç—ã (16 —Ü–∏—Ñ—Ä, –±–µ–∑ –ø—Ä–æ–±–µ–ª–æ–≤)', reply_markup=inline.create_back_markup("withdraw_card"),)
			await state.set_state(CardWithdrawGroup.card_number)
	

@default_router.message(F.text, CardWithdrawGroup.card_number, message_only_confirmed)
async def withdraw_card_number_message(message: Message, state: FSMContext):
	text = message.text()
	user = users.get(message.chat.id, {})
	status = is_valid_card(text)

	if status is None:
		await state.clear()
		user["withdraw_card"] = False
		await message.answer('–û—à–∏–±–∫–∞: –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä –∫–∞—Ä—Ç—ã\n\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä –±–∞–Ω–∫–æ–≤—Å–∫–æ–π –∫–∞—Ä—Ç—ã, —Å–æ—Å—Ç–æ—è—â–∏–π –∏–∑ 16 —Ü–∏—Ñ—Ä, –±–µ–∑ –ø—Ä–æ–±–µ–ª–æ–≤.', reply_markup=inline.create_back_markup("withdraw_card"))
	elif not status:
		await state.clear()
		user["withdraw_card"] = False
		await message.answer('–û—à–∏–±–∫–∞: –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä –∫–∞—Ä—Ç—ã\n\n–í–≤–µ–¥–µ–Ω–Ω—ã–π –Ω–æ–º–µ—Ä –∫–∞—Ä—Ç—ã –Ω–µ –ø—Ä–æ—à–µ–ª –ø—Ä–æ–≤–µ—Ä–∫—É. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–æ–º–µ—Ä –∏ –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä –±–∞–Ω–∫–æ–≤—Å–∫–æ–π –∫–∞—Ä—Ç—ã, —Å–æ—Å—Ç–æ—è—â–∏–π –∏–∑ 16 —Ü–∏—Ñ—Ä, –±–µ–∑ –ø—Ä–æ–±–µ–ª–æ–≤.', reply_markup=inline.create_back_markup("withdraw_card"))
	else:
		await state.update_data(card_number=text)
		data = await state.get_data()
		await message.answer(f'–ù–æ–º–µ—Ä –∫–∞—Ä—Ç—ã –ø—Ä–∏–Ω—è—Ç.\n\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –≤—ã–≤–æ–¥ —Å—Ä–µ–¥—Å—Ç–≤. –°—É–º–º–∞: {data.get("withdraw_sum")} ‚ÇΩ\n\n–ö–∞—Ä—Ç–∞: {text}')
		await state.set_state(CardWithdrawGroup.approved)

@default_router.message(F.data == 'approve_card_withdraw', CardWithdrawGroup.approved, message_only_confirmed)
async def approve_card_withdraw(call: CallbackQuery, state: FSMContext):
	data = await state.get_data()
	user = users.get(call.message.chat.id, {})
	user["withdraw_card"] = False
	partners = await APIRequest.post("/partner/find", {"opts": {"tg_id": call.from_user.id}})
	partner = partners[0]['partners'][-1]

	partner_hash = partner.get("partner_hash", "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ")

	result, status = await APIRequest.post("/transaction/create", data={'partner_hash': partner_hash, 'amount': data['withdraw_sum'], 'card_number': data['withdraw_card']})

	if status != 200:
		await call.answer(f'–æ—à–∏–±–∫–∞: {result}')
		return

	transaction_id = result.get('transaction_id', 0)

	await call.message.edit_text(f'–í–∞—à –∑–∞–ø—Ä–æ—Å –Ω–∞ –≤—ã–≤–æ–¥ —Å—Ä–µ–¥—Å—Ç–≤ –ø–æ—Å—Ç–∞–≤–ª–µ–Ω –≤ –æ—á–µ—Ä–µ–¥—å. üõ° –í–∞—à —Ö—ç—à: {partner_hash} üÜî ID –í—ã–≤–æ–¥–∞: {transaction_id}\n\n–í —Ç–µ—á–µ–Ω–∏–µ 24 —á–∞—Å–æ–≤ –±–æ—Ç —É–≤–µ–¥–æ–º–∏—Ç –≤–∞—Å –æ —Å—Ç–∞—Ç—É—Å–µ –≤—ã–≤–æ–¥–∞. –ï—Å–ª–∏ –∑–∞ —ç—Ç–æ –≤—Ä–µ–º—è –≤—ã –Ω–µ –ø–æ–ª—É—á–∏—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É.', reply_markup=inline.create_back_markup("profile"))


@default_router.message(F.text)
async def text_handler(message: Message):
	user = users.get(message.chat.id, {})
	await message.delete()

	if user.get("final", False):
		await message.answer(
			"üè†Ô∏è <b>–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º!</b>\n\n–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –≤—ã–±—Ä–∞–ª–∏ SinWin!",
			parse_mode=ParseMode.HTML,
			reply_markup=inline.create_main_menu_markup(),
		)
		return
	
	await message.answer(
		"–í—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –≤ –±–æ—Ç–µ, –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –í–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É. –≠—Ç–æ –∑–∞–π–º–µ—Ç –º–µ–Ω–µ–µ 5 –º–∏–Ω—É—Ç.",
		parse_mode=ParseMode.HTML,
		reply_markup=inline.create_start_markup(),
	)


@default_router.callback_query(F.data == "withdraw_steam", message_only_confirmed)
async def withdraw_steam_callback(call: CallbackQuery, state: FSMContext):
	message = "üí∞Ô∏è –ë–∞–ª–∞–Ω—Å: 0 RUB\n–í—ã–≤–æ–¥ –Ω–∞ –∞–∫–∫–∞—É–Ω—Ç Steam\n–õ–∏–º–∏—Ç –æ–¥–Ω–æ–≥–æ –≤—ã–≤–æ–¥–∞: –æ—Ç 2 000 ‚ÇΩ –¥–æ 12 000 ‚ÇΩ\n\n‚úçÔ∏è –í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –∫–æ—Ç–æ—Ä—É—é –í—ã —Ö–æ—Ç–∏—Ç–µ –≤—ã–≤–µ—Å—Ç–∏."

	await call.message.edit_text(
		message,
		parse_mode=ParseMode.HTML,
		reply_markup=inline.create_back_markup("withdraw"),
	)

	await state.set_state(SteamWidthDrawGroup.withdraw_sum)


@default_router.message(F.text, SteamWidthDrawGroup.withdraw_sum, message_only_confirmed)
async def withdraw_steam_message(message: Message, state: FSMContext):
	await message.edit_text(
		"üí∞Ô∏è –ë–∞–ª–∞–Ω—Å: 0 RUB\n\n–û—à–∏–±–∫–∞: –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤. –£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –æ–ø–µ—Ä–∞—Ü–∏–∏.\n\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –≤–∞—à –±–∞–ª–∞–Ω—Å –∏ –≤–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –Ω–µ –ø—Ä–µ–≤—ã—à–∞–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã–µ —Å—Ä–µ–¥—Å—Ç–≤–∞.",
		reply_markup=inline.create_back_markup("withdraw"),
	)

	await state.clear()
